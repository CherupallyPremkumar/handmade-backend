<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.homebase.admin.mapper.ProductMapper">

    <!-- Result Map for Product -->
    <resultMap id="productResultMap" type="com.homebase.admin.entity.Product">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="price" column="price"/>
        <result property="salePrice" column="sale_price"/>
        <result property="onSale" column="on_sale"/>
        <result property="stock" column="stock"/>
        <result property="imageUrl" column="image_url"/>
        <result property="category" column="category"/>
        <result property="rating" column="rating"/>
        <result property="featured" column="featured"/>
        <result property="tenantId" column="tenant_id"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <collection property="tags" ofType="string">
            <result column="tag"/>
        </collection>
    </resultMap>

    <!-- Find all products by tenant -->
    <select id="findAllByTenantId" resultMap="productResultMap">
        SELECT * FROM products 
        WHERE tenant_id = #{tenantId}
        ORDER BY created_at DESC
    </select>

    <!-- Find product by ID and tenant -->
    <select id="findByIdAndTenantId" resultMap="productResultMap">
        SELECT * FROM products 
        WHERE id = #{id} AND tenant_id = #{tenantId}
    </select>

    <!-- Find products by category -->
    <select id="findByCategoryAndTenantId" resultMap="productResultMap">
        SELECT * FROM products 
        WHERE category = #{category} AND tenant_id = #{tenantId}
        ORDER BY created_at DESC
    </select>

    <!-- Find featured products -->
    <select id="findFeaturedByTenantId" resultMap="productResultMap">
        SELECT * FROM products 
        WHERE featured = true AND tenant_id = #{tenantId}
        ORDER BY created_at DESC 
        LIMIT #{limit}
    </select>

    <!-- Find on-sale products -->
    <select id="findOnSaleByTenantId" resultMap="productResultMap">
        SELECT * FROM products 
        WHERE on_sale = true AND tenant_id = #{tenantId}
        ORDER BY created_at DESC
    </select>

    <!-- Find in-stock products -->
    <select id="findInStockByTenantId" resultMap="productResultMap">
        SELECT * FROM products 
        WHERE stock > 0 AND tenant_id = #{tenantId}
        ORDER BY created_at DESC
    </select>

    <!-- Search products by name -->
    <select id="searchByNameAndTenantId" resultMap="productResultMap">
        SELECT * FROM products 
        WHERE name LIKE CONCAT('%', #{search}, '%') 
        AND tenant_id = #{tenantId}
        ORDER BY created_at DESC
    </select>

    <!-- Find products by minimum rating -->
    <select id="findByMinRatingAndTenantId" resultMap="productResultMap">
        SELECT * FROM products 
        WHERE rating >= #{minRating} AND tenant_id = #{tenantId}
        ORDER BY rating DESC
    </select>

    <!-- Count products by tenant -->
    <select id="countByTenantId" resultType="long">
        SELECT COUNT(*) FROM products 
        WHERE tenant_id = #{tenantId}
    </select>

    <!-- Count out of stock products -->
    <select id="countOutOfStockByTenantId" resultType="long">
        SELECT COUNT(*) FROM products 
        WHERE stock = 0 AND tenant_id = #{tenantId}
    </select>

    <!-- Comprehensive filter query for home page with JOIN for tags -->
    <select id="findProductsWithFilters" resultMap="productResultMap">
        SELECT 
            p.id,
            p.name,
            p.description,
            p.price,
            p.sale_price,
            p.on_sale,
            p.stock,
            p.image_url,
            p.category,
            p.rating,
            p.featured,
            p.tenant_id,
            p.created_at,
            p.updated_at,
            pt.tag
        FROM products p
        LEFT JOIN product_tags pt ON p.id = pt.product_id
        WHERE p.tenant_id = #{filter.tenantId}
        
        <!-- Category filter -->
        <if test="filter.category != null and filter.category != '' and filter.category != 'All'">
            AND p.category = #{filter.category}
        </if>
        
        <!-- Search query filter -->
        <if test="filter.searchQuery != null and filter.searchQuery != ''">
            AND (p.name LIKE CONCAT('%', #{filter.searchQuery}, '%') 
                 OR p.description LIKE CONCAT('%', #{filter.searchQuery}, '%'))
        </if>
        
        <!-- Price range filter -->
        <if test="filter.minPrice != null">
            AND p.price >= #{filter.minPrice}
        </if>
        <if test="filter.maxPrice != null">
            AND p.price &lt;= #{filter.maxPrice}
        </if>
        
        <!-- In stock filter -->
        <if test="filter.inStockOnly != null and filter.inStockOnly == true">
            AND p.stock > 0
        </if>
        
        <!-- On sale filter -->
        <if test="filter.onSaleOnly != null and filter.onSaleOnly == true">
            AND p.on_sale = true
        </if>
        
        <!-- Sorting -->
        <choose>
            <when test="filter.sortBy == 'name-asc'">
                ORDER BY p.name ASC
            </when>
            <when test="filter.sortBy == 'name-desc'">
                ORDER BY p.name DESC
            </when>
            <when test="filter.sortBy == 'price-asc'">
                ORDER BY p.price ASC
            </when>
            <when test="filter.sortBy == 'price-desc'">
                ORDER BY p.price DESC
            </when>
            <when test="filter.sortBy == 'rating'">
                ORDER BY p.rating DESC
            </when>
            <otherwise>
                ORDER BY p.rating DESC, p.created_at DESC
            </otherwise>
        </choose>
        
        <!-- Pagination -->
        <if test="filter.size != null and filter.page != null">
            LIMIT #{filter.size} OFFSET #{filter.page}
        </if>
    </select>

    <!-- Count products with filters -->
    <select id="countProductsWithFilters" resultType="long">
        SELECT COUNT(*) FROM products 
        WHERE tenant_id = #{filter.tenantId}
        
        <if test="filter.category != null and filter.category != '' and filter.category != 'All'">
            AND category = #{filter.category}
        </if>
        
        <if test="filter.searchQuery != null and filter.searchQuery != ''">
            AND (name LIKE CONCAT('%', #{filter.searchQuery}, '%') 
                 OR description LIKE CONCAT('%', #{filter.searchQuery}, '%'))
        </if>
        
        <if test="filter.minPrice != null">
            AND price >= #{filter.minPrice}
        </if>
        <if test="filter.maxPrice != null">
            AND price &lt;= #{filter.maxPrice}
        </if>
        
        <if test="filter.inStockOnly != null and filter.inStockOnly == true">
            AND stock > 0
        </if>
        
        <if test="filter.onSaleOnly != null and filter.onSaleOnly == true">
            AND on_sale = true
        </if>
    </select>

    <!-- Get all categories for a tenant -->
    <select id="findAllCategoriesByTenantId" resultType="string">
        SELECT DISTINCT category FROM products 
        WHERE tenant_id = #{tenantId}
        ORDER BY category ASC
    </select>

    <!-- Get minimum price for a tenant -->
    <select id="findMinPriceByTenantId" resultType="java.math.BigDecimal">
        SELECT MIN(price) FROM products 
        WHERE tenant_id = #{tenantId}
    </select>

    <!-- Get maximum price for a tenant -->
    <select id="findMaxPriceByTenantId" resultType="java.math.BigDecimal">
        SELECT MAX(price) FROM products 
        WHERE tenant_id = #{tenantId}
    </select>

</mapper>
